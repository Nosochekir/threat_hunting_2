---
title: "Лабораторная работа №4"
author: "Перов Кирилл"
format: 
    md:
        output-file: README.md
---

# Исследование метаданных DNS трафика

## Цель

1.  Зекрепить практические навыки использования языка программирования R для обработки данных
2.  Закрепить знания основных функций обработки данных экосистемы `tidyverse` языка R
3.  Закрепить навыки исследования метаданных DNS трафика

## Исходные данные

1.  ОС Windows 10
2.  RStudio Desktop
3.  Интерпретатор языка R 4.3.2
4.  dplyr 1.1.4
5.  tidyverse 2.0.0
6.  dns.log
7.  header.csv

## План

1.  Установить пакет 'dplyr'
2.  Импорт и подготовка данных DNS
3.  Анализ данных
4.  Обогащение данных

## Шаги

### Установка dplyr

Устанавливаем пакет `dplyr` с помощью команды `install.packages("dplyr")`. Затем подключаем к текущему проекту:

```{r}
library(dplyr)
```

### Установка tidyverse

Устанавливаем пакет `tidyverse` с помощью команды `install.packages("tidyverse")`. Затем подключаем к текущему проекту:

```{r}
library(tidyverse)
```

### Импорт и подготовка данных DNS

#### 1. Импортируйте данные DNS

```{r}
dns <- read.table("dns.log", header = FALSE, sep = "\t", quote = "", encoding="UTF-8")
```

#### 2. Добавьте пропущенные данные о структуре данных (назначении столбцов)

В файле header.csv не хватает некоторых данных о столбцах, поэтому, используя открытые источники, мы впишем их вручную.

```{r}
colnames(dns) <- read.csv("header.csv", header = FALSE, skip = 1)$V1
```

#### 3. Просмотрите общую структуру данных с помощью функции glimpse()

```{r}
dns %>%
  glimpse()
```

### Анализ данных

#### 4. Сколько участников информационного обмена в сети Доброй Организации?

```{r}
hosts <- union(unique(dns$id.orig_h), unique(dns$id.resp_h))
hosts %>% length()
```

#### 5. Какое соотношение участников обмена внутри сети и участников обращений к внешним ресурсам?

```{r}
internal_ip_pattern <- c("192.168.", "10.", "100.([6-9]|1[0-1][0-9]|12[0-7]).", "172.((1[6-9])|(2[0-9])|(3[0-1])).")
internal_ips <- hosts[grep(paste(internal_ip_pattern, collapse = "|"), hosts)]
internal_ips_cnt <- sum(hosts %in% internal_ips)
external_ips_cnt <- length(hosts) - internal_ips_cnt

rat <- internal_ips_cnt / external_ips_cnt
rat
```

#### 6. Найдите топ-10 участников сети, проявляющих наибольшую сетевую активность.

```{r}
top_host <- dns %>%
  group_by(id.orig_h) %>%
  summarise(request_count = n()) %>%
  arrange(desc(request_count)) %>%
  top_n(10, request_count)
top_host
```

#### 7. Найдите топ-10 доменов, к которым обращаются пользователи сети и соответственное количество обращений

```{r}
top_domain <- dns %>%
  group_by(query) %>%
  summarise(request_count = n()) %>%
  arrange(desc(request_count)) %>%
  top_n(10, request_count)
top_domain
```

#### 8. Опеределите базовые статистические характеристики (функция summary()) интервала времени между последовательным обращениями к топ-10 доменам.

```{r}
top_domain_filter <- dns %>% 
  filter(tolower(query) %in% top_domain$query) %>%
  arrange(ts)
time_interval <- diff(top_domain_filter$ts)
summary(time_interval)
```

#### 9. Часто вредоносное программное обеспечение использует DNS канал в качестве канала управления, периодически отправляя запросы на подконтрольный злоумышленникам DNS сервер. По периодическим запросам на один и тот же домен можно выявить скрытый DNS канал. Есть ли такие IP адреса в исследуемом датасете?

```{r}
ip_domain_counts <- dns %>%
  group_by(ip = `id.orig_h`, query) %>%
  summarise(request_count = n()) %>%
  filter(request_count > 1)
```

```{r}
unique_ips_with_periodic_requests <- unique(ip_domain_counts$ip)

unique_ips_with_periodic_requests %>% length()
unique_ips_with_periodic_requests %>% head()
```

### Обогащение данных

#### 10. Определите местоположение (страну, город) и организацию-провайдера для топ-10 доменов. Для этого можно использовать сторонние сервисы, например https://v4.ifconfig.co/.

```{r}
top_domain
```

1.  teredo.ipv6.microsoft.com

    -   IP: 20.112.250.133
    -   Country: United States
    -   Timezone: America/Chicago
    -   Organization: Microsoft

2.  tools.google.com

    -   IP: 173.194.222.100
    -   Country: United States
    -   Timezone: America/Chicago
    -   Organization: Google

3.  www.apple.com

    -   IP: 17.253.144.10
    -   Country: United States
    -   Timezone: America/Chicago
    -   Organization: Apple-Engineering

4.  safebrowsing.clients.google.com

    -   IP: 64.233.164.100
    -   Country: United States
    -   Timezone: America/Chicago
    -   Organization: Google

5.  44.206.168.192.in-addr.arpa

    -   IP: 44.206.168.192
    -   Country: United States
    -   City: Ashburn
    -   Timezone: America/New_York
    -   Organization: Amazon

## Оценка результата

В результате лабораторной работы были выполнены задания с использованием пакета `dplyr` и `tidyverse`

## Вывод

В ходе лабораторной работы были проанализированы и дополнены данные трафика DNS.
